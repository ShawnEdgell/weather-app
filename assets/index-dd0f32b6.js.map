{"version":3,"file":"index-dd0f32b6.js","sources":["../../src/main.js"],"sourcesContent":["import './style.css';\n\nconst API_KEY = '219a015ee939448aa0f195825231010';\n\nasync function fetchWeather(location) {\n    const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=${location}`);\n    const data = await response.json();\n\n    if (response.status !== 200) {\n        throw new Error(data.error.message);\n    }\n\n    return data;\n}\n\nfunction processWeatherData(data) {\n    const locationParts = data.location.name.split(',');\n    const city = locationParts[0].trim();\n\n    const isRaining = data.current.condition.code === 1063; // Check for rain condition code\n    const isSnowing = data.current.condition.code === 1000; // Check for snow condition code\n\n    return {\n        location: city,\n        temperature: data.current.temp_c,\n        feelsLike: data.current.feelslike_c,\n        humidity: data.current.humidity,\n        windSpeed: data.current.wind_kph,\n        description: data.current.condition.text,\n        icon: data.current.condition.icon,\n        localDate: formatDate(data.location.localtime.split(' ')[0]),\n        localTime: formatTime(data.location.localtime.split(' ')[1]),\n        chanceOfRain: isRaining ? `${data.current.precip_mm}%` : '0%',\n        chanceOfSnow: isSnowing ? `${data.current.precip_mm}%` : '0%',\n    };\n}\n\ndocument.getElementById('fetch-weather-btn').addEventListener('click', () => {\n    const location = document.getElementById('location-input').value || 'Toronto';\n    fetchAndDisplayWeather(location);\n});\n\nasync function fetchAndDisplayWeather(location) {\n    const errorMessageDiv = document.getElementById('error-message');\n    errorMessageDiv.style.display = 'none';\n\n    // Use 'Toronto' as the default location if none is provided\n    if (!location) {\n        location = 'Toronto';\n    }\n\n    document.getElementById('loading').style.display = 'block';\n\n    try {\n        const weatherData = await fetchWeather(location);\n        const processedData = processWeatherData(weatherData);\n        displayWeatherInfo(processedData);\n    } catch (error) {\n        errorMessageDiv.textContent = \"Failed to fetch weather. Please check the location and try again.\";\n        errorMessageDiv.style.display = 'block';\n        console.error(\"Error:\", error.message);\n    }\n\n    document.getElementById('loading').style.display = 'none';\n}\n\n\nfunction displayWeatherInfo(data) {\n    document.getElementById('localDate').textContent = data.localDate;\n    document.getElementById('localTime').textContent = data.localTime;\n    document.getElementById('location').textContent = data.location;\n    document.getElementById('description').textContent = data.description;\n    document.getElementById('weatherIcon').src = data.icon;\n    document.getElementById('temperature').textContent = `${data.temperature}°C`;\n    document.getElementById('feelsLike').textContent = `Feels Like: ${data.feelsLike}°C`;\n    document.getElementById('humidity').textContent = `Humidity: ${data.humidity}%`;\n    document.getElementById('windSpeed').textContent = `Wind Speed: ${data.windSpeed} kph`;\n    document.getElementById('humidity').textContent = `Humidity: ${data.humidity}%`;\n    document.getElementById('windSpeed').textContent = `Wind Speed: ${data.windSpeed} kph`;\n    document.getElementById('chance-of-rain').textContent = `Chance of Rain: ${data.chanceOfRain}`;\n    document.getElementById('chance-of-snow').textContent = `Chance of Snow: ${data.chanceOfSnow}`;\n}\n\nfunction formatDate(dateString) {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n}\n\nfunction formatTime(timeString) {\n    let [hour, minutes] = timeString.split(':').map(str => parseInt(str, 10));\n\n    const ampm = hour >= 12 ? 'pm' : 'am';\n    if (hour > 12) hour -= 12;\n    if (hour === 0) hour = 12;\n\n    return `${hour}:${minutes.toString().padStart(2, '0')} ${ampm}`;\n}\n\n// Initialize the app with Toronto's weather\nwindow.addEventListener('load', () => {\n    fetchAndDisplayWeather();\n});\n\n// Add an event listener to the input field\ndocument.getElementById('location-input').addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n      // Prevent the default form submission behavior\n      event.preventDefault();\n      // If Enter key is pressed, trigger the button click\n      document.getElementById('fetch-weather-btn').click();\n    }\n  });"],"names":["API_KEY","async","fetchAndDisplayWeather","location","errorMessageDiv","document","getElementById","style","display","weatherData","response","fetch","data","json","status","Error","error","message","fetchWeather","processedData","city","name","split","trim","isRaining","current","condition","code","isSnowing","temperature","temp_c","feelsLike","feelslike_c","humidity","windSpeed","wind_kph","description","text","icon","localDate","formatDate","localtime","localTime","formatTime","chanceOfRain","precip_mm","chanceOfSnow","processWeatherData","textContent","src","console","dateString","Date","toLocaleDateString","undefined","weekday","year","month","day","timeString","hour","minutes","map","str","parseInt","ampm","toString","padStart","addEventListener","value","window","event","key","preventDefault","click"],"mappings":"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"}